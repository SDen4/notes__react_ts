{"version":3,"sources":["components/App/App.module.scss","components/NotesList/NotesList.module.scss","components/AddNote/AddNote.module.scss","redux/constants.ts","redux/actions.ts","components/Task/Task.tsx","components/AddNote/AddNote.tsx","components/Note/Note.tsx","components/NotesList/NotesList.tsx","components/DelNoteModal/DelNoteModal.tsx","components/App/App.tsx","reportWebVitals.ts","redux/notesListReducer.ts","redux/rootReducer.ts","index.tsx","components/Task/Task.module.scss","components/DelNoteModal/DelNoteModal.module.scss","components/Note/Note.module.scss"],"names":["module","exports","CREATE_NOTE","NEW_NOTE","DEL_NOTE","EDIT_NOTE","CANCEL_NOTE","editNote","note","type","payload","connect","state","save","notes","taskName","taskId","deleteTask","editTask","saveFlag","useState","editTaskFlag","setEditTaskFlag","newTask","setNewTask","className","styles","component","title_wrapper","defaultValue","onChange","event","value","target","taskEditInput","button__wrapper","button","button_del","onClick","trim","button_cancel","mapDispatchToProps","createNote","cancelNote","editData","editClear","editTitle","noteTitle","setNoteTitle","noteTask","setNoteTask","editTasks","tasks","setTasks","idDeleteTask","newTasksList","filter","task","id","editTaskId","newEditTask","checked","map","onSubmit","preventDefault","newNote","editId","Date","now","toString","form","subtitle","row","placeholder","item","Math","random","noteTaskObj","prev","button_wrapper","Note","props","noteTasks","noteId","onRemove","onEdit","noteTop","buttonWrapper","length","noList","DelNoteModal","onModal","modal","btns_wrapper","button_close","addNoteFlag","dispatch","useDispatch","modalDelNote","setModalDelNote","delId","setDelId","editDataArr","setEditDataArr","title","des","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","concat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8ebc292.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"App_component__xe9Lf\",\"title\":\"App_title__2C-7r\",\"button\":\"App_button__1-zwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"NotesList_component__CthmL\",\"noList\":\"NotesList_noList__3Mak1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"AddNote_component__yTg_T\",\"form\":\"AddNote_form__1Ps6P\",\"subtitle\":\"AddNote_subtitle__JWPSk\",\"row\":\"AddNote_row__3oN3B\",\"button\":\"AddNote_button__3gU-6\",\"button_del\":\"AddNote_button_del__Zt-RU\",\"button_cancel\":\"AddNote_button_cancel__1Ydlq\",\"button_wrapper\":\"AddNote_button_wrapper__zhLAz\",\"tasks\":\"AddNote_tasks__2GFyV\",\"input_warning\":\"AddNote_input_warning__U1Qud\"};","export const CREATE_NOTE = 'CREATE_NOTE';\nexport const NEW_NOTE = 'NEW_NOTE';\nexport const DEL_NOTE = 'DEL_NOTE';\nexport const EDIT_NOTE = 'EDIT_NOTE';\nexport const CANCEL_NOTE = 'CANCEL_NOTE';\n","import {\n  CREATE_NOTE,\n  NEW_NOTE,\n  DEL_NOTE,\n  EDIT_NOTE,\n  CANCEL_NOTE,\n} from './constants';\nimport { NoteType } from './types';\n\nexport const createNote = (note: NoteType) => {\n  return {\n    type: CREATE_NOTE,\n    payload: note,\n  } as const;\n};\n\nexport const newNote = () => {\n  return {\n    type: NEW_NOTE,\n    payload: true,\n  } as const;\n};\n\nexport const delNote = (id: string) => {\n  return {\n    type: DEL_NOTE,\n    payload: id,\n  } as const;\n};\n\nexport const editNote = (note: NoteType) => {\n  return {\n    type: EDIT_NOTE,\n    payload: note,\n  } as const;\n};\n\nexport const cancelNote = () => {\n  return {\n    type: CANCEL_NOTE,\n  } as const;\n};\n\ntype CreateNoteType = ReturnType<typeof createNote>;\ntype NewNoteType = ReturnType<typeof newNote>;\ntype DelNoteType = ReturnType<typeof delNote>;\ntype EditNoteType = ReturnType<typeof editNote>;\ntype CancelNoteType = ReturnType<typeof cancelNote>;\n\nexport type ActionsType =\n  | CreateNoteType\n  | NewNoteType\n  | DelNoteType\n  | EditNoteType\n  | CancelNoteType;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport styles from './Task.module.scss';\n\ninterface IProps {\n  save?: boolean | undefined;\n  taskName: string;\n  taskId: string;\n  deleteTask?: any;\n  editTask?: any;\n}\n\nconst Task: React.FC<IProps> = ({\n  save,\n  taskName,\n  taskId,\n  deleteTask,\n  editTask,\n}) => {\n  const saveFlag = save;\n  const [editTaskFlag, setEditTaskFlag] = useState(false);\n  const [newTask, setNewTask] = useState('');\n  const deleteTaskHandler = () => {\n    deleteTask(taskId);\n  };\n\n  const editTaskHandler = () => {\n    setEditTaskFlag(true);\n  };\n\n  const newTaskHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let value = event.target.value;\n    setNewTask(value);\n  };\n\n  const saveNewTaskHandler = () => {\n    if (!newTask.trim()) return null;\n    editTask(newTask, taskId);\n  };\n\n  return (\n    <div className={styles.component}>\n      <div className={styles.title_wrapper}>\n        <input type=\"checkbox\" />\n        {editTaskFlag ? (\n          <input\n            type=\"text\"\n            defaultValue={taskName}\n            onChange={newTaskHandler}\n            className={styles.taskEditInput}\n          />\n        ) : (\n          <h4>{taskName}</h4>\n        )}\n      </div>\n      {saveFlag && (\n        <div className={styles.button__wrapper}>\n          <button\n            type=\"button\"\n            className={`${styles.button} ${styles.button_del}`}\n            onClick={deleteTaskHandler}\n          >\n            Удалить\n          </button>\n\n          {editTaskFlag ? (\n            <button\n              type=\"button\"\n              className={styles.button}\n              onClick={saveNewTaskHandler}\n            >\n              Сохранить\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className={`${styles.button} ${styles.button_cancel}`}\n              onClick={editTaskHandler}\n            >\n              Редактировать\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToPtops = (state: any) => {\n  return {\n    save: state.notes.save,\n  };\n};\n\nexport default connect(mapStateToPtops, null)(Task);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createNote, editNote } from '../../redux/actions';\n\nimport Task from '../Task/Task';\n\nimport styles from './AddNote.module.scss';\n\ntype IProps = {\n  createNote: any;\n  editNote: any;\n  cancelNote: any;\n  editData?: { editId: string; editTitle: string; editTasks: any };\n  editClear: any;\n};\n\nconst AddNote: React.FC<IProps> = ({\n  createNote,\n  editNote,\n  cancelNote,\n  editData,\n  editClear,\n}) => {\n  const [noteTitle, setNoteTitle] = useState<string>(\n    editData?.editTitle ? editData?.editTitle : '',\n  );\n\n  const [noteTask, setNoteTask] = useState<string>('');\n\n  const [tasks, setTasks] = useState(\n    editData?.editTasks ? editData?.editTasks : ([] as any),\n  );\n\n  const noteTitleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let value = event.target.value;\n    setNoteTitle(value);\n  };\n\n  const noteTaskHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let value = event.target.value;\n    setNoteTask(value);\n  };\n\n  const submitTaskHandler = (event: any) => {\n    event.preventDefault();\n\n    if (!noteTask.trim()) return null;\n\n    let noteTaskObj = { taskName: '', id: '', checked: false };\n\n    noteTaskObj.taskName = noteTask;\n    noteTaskObj.id = 'task_' + Date.now().toString();\n    noteTaskObj.checked = false;\n\n    setTasks((prev: any) => [...prev, noteTaskObj]);\n    setNoteTask('');\n  };\n\n  const submitNoteHadler = (event: any) => {\n    event.preventDefault();\n\n    const newNote = {\n      noteTitle,\n      id: editData?.editId ? editData?.editId : 'note_' + Date.now().toString(),\n      tasks,\n    };\n\n    if (!newNote.noteTitle.trim()) return null;\n\n    if (editData?.editTitle) {\n      editNote(newNote);\n      editClear();\n    } else {\n      createNote(newNote);\n    }\n  };\n\n  const cancelSaveHandler = () => {\n    cancelNote();\n    editClear();\n  };\n\n  const deleteTask = (idDeleteTask: string) => {\n    const newTasksList = tasks.filter((task: any) => task.id !== idDeleteTask);\n    setTasks(newTasksList);\n  };\n\n  const editTask = (newTask: string, editTaskId: string) => {\n    const newEditTask = { taskName: newTask, id: editTaskId, checked: false };\n    const newTasksList = tasks.map((task: any) =>\n      task.id === editTaskId ? newEditTask : task,\n    );\n    setTasks(newTasksList);\n  };\n\n  return (\n    <div className={styles.component}>\n      <h2>Создание новой заметки</h2>\n\n      <form onSubmit={submitNoteHadler} className={styles.form}>\n        <div className={styles.subtitle}>Название заметки</div>\n        <div className={styles.row}>\n          <input\n            type=\"text\"\n            defaultValue={noteTitle}\n            onChange={noteTitleHandler}\n            placeholder=\"Введите название заметки\"\n          />\n        </div>\n\n        <div className={styles.subtitle}>Задачи</div>\n        {tasks.map((item: any) => {\n          const { taskName, id } = item;\n          return (\n            <Task\n              taskName={taskName}\n              taskId={id}\n              key={Math.random()}\n              deleteTask={deleteTask}\n              editTask={editTask}\n            />\n          );\n        })}\n\n        <div className={styles.row}>\n          <input\n            type=\"text\"\n            value={noteTask}\n            onChange={noteTaskHandler}\n            placeholder=\"Введите название задачи\"\n          />\n          <button\n            type=\"button\"\n            className={styles.button}\n            onClick={submitTaskHandler}\n          >\n            Добавить задачу\n          </button>\n        </div>\n\n        <div className={styles.button_wrapper}>\n          <button type=\"submit\" className={styles.button}>\n            Сохранить\n          </button>\n\n          <button\n            type=\"reset\"\n            className={`${styles.button} ${styles.button_cancel}`}\n            onClick={cancelSaveHandler}\n          >\n            Отмена\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  createNote,\n  editNote,\n};\n\nexport default connect(null, mapDispatchToProps)(AddNote);\n","import React from 'react';\n\nimport { TaskType } from '../../redux/types';\n\nimport Task from '../Task/Task';\n\nimport styles from './Note.module.scss';\n\ntype IProps = {\n  noteTitle: string;\n  noteTasks: TaskType[];\n  noteId: string;\n  onRemove: (id: string) => void;\n  onEdit: (id: string, title: string, tasks: TaskType[]) => void;\n};\n\nconst Note: React.FC<IProps> = (props) => {\n  const { noteTitle, noteTasks, noteId, onRemove, onEdit } = props;\n\n  return (\n    <div className={styles.component}>\n      <div className={styles.noteTop}>\n        <h2>{noteTitle} </h2>\n        <div className={styles.buttonWrapper}>\n          <button\n            className={styles.button}\n            onClick={() => onEdit(noteId, noteTitle, noteTasks)}\n          >\n            Изменить\n          </button>\n          <button\n            className={`${styles.button} ${styles.button_del}`}\n            onClick={() => onRemove(noteId)}\n          >\n            Удалить\n          </button>\n        </div>\n      </div>\n      {noteTasks.map((item: TaskType) => {\n        const { taskName, id } = item;\n        return <Task taskName={taskName} taskId={id} key={Math.random()} />;\n      })}\n    </div>\n  );\n};\n\nexport default Note;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { NoteType, TaskType } from '../../redux/types';\n\nimport Note from '../Note/Note';\n\nimport styles from './NotesList.module.scss';\n\ntype IProps = {\n  notes: any;\n  onRemove: (id: string) => void;\n  onEdit: (id: string, title: string, tasks: TaskType[]) => void;\n};\n\nconst NotesList: React.FC<IProps> = ({ notes, onRemove, onEdit }) => {\n  if (!notes.length) {\n    return (\n      <div className={styles.noList}>\n        <h2>Еще не создано ни одной заметки...</h2>\n      </div>\n    );\n  }\n\n  return notes.map((note: NoteType) => {\n    const { noteTitle, tasks, id } = note;\n    return (\n      <Note\n        key={id}\n        noteTitle={noteTitle}\n        noteTasks={tasks}\n        noteId={id}\n        onRemove={onRemove}\n        onEdit={onEdit}\n      />\n    );\n  });\n};\n\nconst mapStateToPtops = (state: any) => {\n  return {\n    notes: state.notes.notes,\n  };\n};\n\nexport default connect(mapStateToPtops, null)(NotesList);\n","import React from 'react';\n\nimport styles from './DelNoteModal.module.scss';\n\ninterface IProps {\n  onModal: (des: boolean) => void;\n}\n\nconst DelNoteModal: React.FC<IProps> = (props) => {\n  const { onModal } = props;\n\n  return (\n    <div className={styles.component}>\n      <div className={styles.modal}>\n        <h2>Вы уверены, что хотите удалить заметку {} ?</h2>\n        <div className={styles.btns_wrapper}>\n          <button\n            type=\"button\"\n            className={`${styles.button} ${styles.button_del}`}\n            onClick={() => onModal(true)}\n          >\n            Удалить\n          </button>\n          <button\n            type=\"button\"\n            className={styles.button}\n            onClick={() => onModal(false)}\n          >\n            Отмена\n          </button>\n        </div>\n        <button\n          type=\"button\"\n          className={styles.button_close}\n          onClick={() => onModal(false)}\n        ></button>\n      </div>\n    </div>\n  );\n};\n\nexport default DelNoteModal;\n","import React, { useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { newNote, editNote, cancelNote } from '../../redux/actions';\nimport { DEL_NOTE } from '../../redux/constants';\n\nimport AddNote from '../AddNote/AddNote';\nimport NotesList from '../NotesList/NotesList';\nimport DelNoteModal from '../DelNoteModal/DelNoteModal';\n\nimport styles from './App.module.scss';\n\ntype IProps = {\n  save: boolean;\n  newNote: any;\n  editNote: any;\n  cancelNote: any;\n};\n\nconst App: React.FC<IProps> = ({ save, newNote, cancelNote }) => {\n  const addNoteFlag = save;\n  const dispatch = useDispatch();\n  const [modalDelNote, setModalDelNote] = useState<boolean>(false);\n  const [delId, setDelId] = useState<string>('');\n  const [editDataArr, setEditDataArr] = useState({} as any);\n\n  const addNoteHandler = () => {\n    newNote();\n  };\n\n  const removeNoteHandler = (id: string) => {\n    setDelId(id);\n    setModalDelNote(true);\n  };\n\n  const onModal = (des: boolean) => {\n    if (des) {\n      dispatch({\n        type: DEL_NOTE,\n        payload: delId,\n      });\n      setDelId('');\n      setModalDelNote(false);\n    } else {\n      setDelId('');\n      setModalDelNote(false);\n    }\n  };\n\n  const editNoteHandler = (\n    editId: string,\n    editTitle: string,\n    editTasks: any[],\n  ) => {\n    setEditDataArr({ editId, editTitle, editTasks });\n    newNote();\n  };\n\n  const editClear = () => {\n    setEditDataArr({});\n  };\n\n  return (\n    <div className={styles.component}>\n      <h1 className={styles.title}>Заметки</h1>\n\n      {!addNoteFlag && (\n        <>\n          <NotesList\n            notes={[]}\n            onRemove={removeNoteHandler}\n            onEdit={editNoteHandler}\n          />\n          <button className={styles.button} onClick={addNoteHandler}>\n            Создать заметку\n          </button>\n        </>\n      )}\n\n      {addNoteFlag && (\n        <AddNote\n          editData={editDataArr}\n          editClear={editClear}\n          cancelNote={cancelNote}\n        />\n      )}\n      {modalDelNote && <DelNoteModal onModal={onModal} />}\n    </div>\n  );\n};\n\nconst mapStateToPtops = (state: any) => {\n  return {\n    save: state.notes.save,\n  };\n};\n\nconst mapDispatchToProps = {\n  newNote,\n  editNote,\n  cancelNote,\n};\n\nexport default connect(mapStateToPtops, mapDispatchToProps)(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  CREATE_NOTE,\n  NEW_NOTE,\n  DEL_NOTE,\n  EDIT_NOTE,\n  CANCEL_NOTE,\n} from './constants';\nimport { ActionsType } from './actions';\nimport { InitialStateType, NoteType } from './types';\n\nconst initialState: InitialStateType = {\n  notes: [],\n  save: false,\n};\n\nexport const notesReducer = (\n  state = initialState,\n  action: ActionsType,\n): typeof state => {\n  switch (action.type) {\n    case CREATE_NOTE:\n      return {\n        ...state,\n        notes: state.notes.concat([action.payload]),\n        save: false,\n      };\n\n    case NEW_NOTE:\n      return {\n        ...state,\n        save: true,\n      };\n\n    case DEL_NOTE:\n      return {\n        ...state,\n        notes: state.notes.filter(\n          (note: NoteType) => note.id !== action.payload,\n        ),\n      };\n\n    case EDIT_NOTE:\n      return {\n        ...state,\n        notes: state.notes.map((item: NoteType) => {\n          return item.id === action.payload.id ? action.payload : item;\n        }),\n        save: false,\n      };\n\n    case CANCEL_NOTE:\n      return {\n        ...state,\n        save: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { notesReducer } from './notesListReducer';\n\nexport const rootReducer = combineReducers({\n  notes: notesReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './redux/rootReducer';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware()));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Task_component__wMlDp\",\"title_wrapper\":\"Task_title_wrapper__CYTzv\",\"button__wrapper\":\"Task_button__wrapper__3yITP\",\"button\":\"Task_button__2vogA\",\"button_del\":\"Task_button_del__1rU3H\",\"button_cancel\":\"Task_button_cancel__3YkqP\",\"taskEditInput\":\"Task_taskEditInput__3PR1b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"DelNoteModal_component__TB4z4\",\"modal\":\"DelNoteModal_modal__Bl_8V\",\"btns_wrapper\":\"DelNoteModal_btns_wrapper__2S6vE\",\"button\":\"DelNoteModal_button__2UKFf\",\"button_del\":\"DelNoteModal_button_del__TPNys\",\"button_cancel\":\"DelNoteModal_button_cancel__YUUfg\",\"button_close\":\"DelNoteModal_button_close__EnpXK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Note_component__11sn8\",\"noteTop\":\"Note_noteTop__1C9wk\",\"buttonWrapper\":\"Note_buttonWrapper__TRWBH\",\"button\":\"Note_button__NibTO\",\"button_del\":\"Note_button_del__1f3FX\"};"],"sourceRoot":""}